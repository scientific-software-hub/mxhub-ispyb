Ext.define("Ext.plugin.PullRefresh",{extend:"Ext.Component",alias:"plugin.pullrefresh",requires:["Ext.DateExtras"],config:{list:null,pullRefreshText:"Pull down to refresh...",releaseRefreshText:"Release to refresh...",lastUpdatedText:"Last Updated:",lastUpdatedDateFormat:"m/d/Y h:iA",loadingText:"Loading...",loadedText:"Loaded.",autoSnapBack:true,snappingAnimationDuration:300,overpullSnapBackDuration:300,pullTpl:['<div class="x-list-pullrefresh">','<div class="x-list-pullrefresh-arrow"></div>','<div class="x-loading-spinner">','<span class="x-loading-top"></span>','<span class="x-loading-right"></span>','<span class="x-loading-bottom"></span>','<span class="x-loading-left"></span>',"</div>",'<div class="x-list-pullrefresh-wrap">','<h3 class="x-list-pullrefresh-message"></h3>','<div class="x-list-pullrefresh-updated"></div>',"</div>","</div>"].join(""),translatable:true},isRefreshing:false,currentViewState:"",initialize:function(){this.callParent();this.on({painted:"onPainted",scope:this})},init:function(b){var a=this;a.setList(b);a.initScrollable()},initScrollable:function(){var d=this,g=d.getList(),b=g.getStore(),f=d.getPullTpl(),c=d.element,e=g.getScrollable(),a;if(!e){return}a=e.getScroller();a.setAutoRefresh(false);d.lastUpdated=new Date();g.insert(0,d);if(b){if(b.isAutoLoading()){g.setLoadingText(null)}else{b.on({load:{single:true,fn:function(){g.setLoadingText(null)}}})}}f.overwrite(c,[]);d.loadingElement=c.getFirstChild();d.messageEl=c.down(".x-list-pullrefresh-message");d.updatedEl=c.down(".x-list-pullrefresh-updated");d.maxScroller=a.getMaxPosition();a.on({maxpositionchange:d.setMaxScroller,scroll:d.onScrollChange,scope:d});d.resetRefreshState()},onScrollableChange:function(){this.initScrollable()},updateList:function(a,c){var b=this;if(a&&a!=c){a.on({order:"after",scrollablechange:b.onScrollableChange,scope:b})}else{if(c){c.un({order:"after",scrollablechange:b.onScrollableChange,scope:b})}}},fetchLatest:function(){var b=this.getList().getStore(),c=b.getProxy(),a;a=Ext.create("Ext.data.Operation",{page:1,start:0,model:b.getModel(),limit:b.getPageSize(),action:"read",sorters:b.getSorters(),filters:b.getRemoteFilter()?b.getFilters():[]});c.read(a,this.onLatestFetched,this)},onLatestFetched:function(d){var n=this.getList().getStore(),m=this.getList(),j=m.getScrollable().getScroller(),h=j.position.x,f=j.position.y,b=n.getData(),c=d.getRecords(),a=c.length,k=[],l,g,e;for(e=0;e<a;e++){l=c[e];g=b.getByKey(l.getId());if(g){g.set(l.getData())}else{k.push(l)}g=undefined}n.insert(0,k);j.scrollTo(h,f);this.setViewState("loaded");this.fireEvent("latestfetched");if(this.getAutoSnapBack()){this.snapBack()}},snapBack:function(){var b=this,c=b.getList(),a=c.getScrollable().getScroller();a.on({scrollend:function(){this.resetRefreshState()},single:true,scope:b});if(a.position.y<0){a.minPosition.y=0;a.scrollTo(null,0,{duration:a.isTouching?0:b.getSnappingAnimationDuration()})}},onPainted:function(){this.pullHeight=this.loadingElement.getHeight()},setMaxScroller:function(b,a){this.maxScroller=a},onScrollChange:function(b,a,c){if(c<=0){this.onBounceTop(c)}if(c>this.maxScroller.y){this.onBounceBottom(c)}},applyPullTpl:function(a){return(Ext.isObject(a)&&a.isTemplate)?a:new Ext.XTemplate(a)},onBounceTop:function(e){var b=this,d=b.pullHeight,c=b.getList(),a=c.getScrollable().getScroller();if(!b.isReleased){if(!d){b.onPainted();d=b.pullHeight}if(!b.isRefreshing&&-e>=d+10){b.isRefreshing=true;b.setViewState("release");a.getContainer().onBefore({dragend:"onScrollerDragEnd",single:true,scope:b})}else{if(b.isRefreshing&&-e<d+10){b.isRefreshing=false;b.setViewState("pull")}}}b.getTranslatable().translate(0,-e)},onScrollerDragEnd:function(){var c=this;if(c.isRefreshing){var d=c.getList(),a=d.getScrollable().getScroller(),b=a.getTranslatable();b.setEasingY({duration:this.getOverpullSnapBackDuration()});a.minPosition.y=-c.pullHeight;a.on({scrollend:"loadStore",single:true,scope:c});c.isReleased=true}},loadStore:function(){var a=this;a.setViewState("loading");a.isReleased=false;a.fetchLatest()},onBounceBottom:Ext.emptyFn,setViewState:function(d){var b=this,c=Ext.baseCSSPrefix,e=b.messageEl,a=b.loadingElement;if(d===b.currentViewState){return b}b.currentViewState=d;if(e&&a){switch(d){case"pull":e.setHtml(b.getPullRefreshText());a.removeCls([c+"list-pullrefresh-release",c+"list-pullrefresh-loading"]);break;case"release":e.setHtml(b.getReleaseRefreshText());a.addCls(c+"list-pullrefresh-release");break;case"loading":e.setHtml(b.getLoadingText());a.addCls(c+"list-pullrefresh-loading");break;case"loaded":e.setHtml(b.getLoadedText());a.addCls(c+"list-pullrefresh-loaded");break}}return b},resetRefreshState:function(){var a=this;a.isRefreshing=false;a.lastUpdated=new Date();a.setViewState("pull");a.updatedEl.setHtml(this.getLastUpdatedText()+"&nbsp;"+Ext.util.Format.date(a.lastUpdated,a.getLastUpdatedDateFormat()))}});