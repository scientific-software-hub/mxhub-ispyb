var doc = [
{
	line		:	'1',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'getBuffer ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'9',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'_getActions ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'28',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'refresh ',
	parameters	:	[' buffer',' experiment '],

},
{
	type		:	'method',
	line		:	'40',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'getAdditives ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'59',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'_getFields ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'118',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'_prepareData ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'134',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'getPanel ',
	parameters	:	[' buffer',' experiment '],

},
{
	type		:	'method',
	line		:	'141',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'getStore ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'163',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'_renderGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'200',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'203',
	file		:	'./grid/additivegrid.js',
	className	:	'AdditiveGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'getPanel ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'10',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'getVolumesPanel ',
	parameters	:	[' data',' title '],

},
{
	type		:	'method',
	line		:	'168',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'_prepareData ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'211',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'refresh ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'216',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'render ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'232',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'input ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'238',
	file		:	'./grid/volumegrid.js',
	className	:	'VolumeGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * Given data analysis parsed with ResultsAssemblyWidget makes a selector grid with buffer/protein   *',
	line		:	'1',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'SpecimenSelectorResultGrid',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'SpecimenSelectorResultGrid',
	name		:	'_prepareData ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'21',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'SpecimenSelectorResultGrid',
	name		:	'refresh ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'25',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'SpecimenSelectorResultGrid',
	name		:	'getPanel ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'97',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'SpecimenSelectorResultGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'104',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'SpecimenSelectorResultGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'    *   * Show all buffer conditions for each macromolecules pointing out the measurements quality   *    * @height   * @maxHeight   * @width   * @searchBar   * @tbar   * @btnResultVisible   *    * #onClick   ',
	line		:	'109',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'157',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'edit ',
	parameters	:	[' macromoleculeId '],

},
{
	type		:	'method',
	line		:	'166',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'207',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'refresh ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'280',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'_prepareData ',
	parameters	:	[' data '],

},
{
	comments	:	'    * Given an array of conditions it returns distinct(concentrations) order by concentration and hash map with number of ocurrences*',
	type		:	'method',
	className	:	'ResultsAssemblyGrid',
	name		:	'parseConcentrations ',
	parameters	:	[' val',' conditions',' differentConcentration',' quality '],
	line		:	'287',
	file		:	'./grid/resultsassemblygrid.js',

},
{
	type		:	'method',
	line		:	'333',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'getConditionWarnings ',
	parameters	:	[' condition '],

},
{
	type		:	'method',
	line		:	'360',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'getFrameHTMLTable ',
	parameters	:	[' warnings '],

},
{
	type		:	'method',
	line		:	'374',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'createConcentrationRow ',
	parameters	:	[' numberOcu',' condition',' warnings'],

},
{
	type		:	'method',
	line		:	'389',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'getConditionHTMLTable ',
	parameters	:	[' val',' style',' record '],

},
{
	type		:	'method',
	line		:	'451',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'_getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'495',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'getLegendPanel ',
	parameters	:	['  '],

},
{
	comments	:	'  * Returns the grid *',
	type		:	'method',
	className	:	'ResultsAssemblyGrid',
	name		:	'getPanel ',
	parameters	:	[' macromolecules '],
	line		:	'504',
	file		:	'./grid/resultsassemblygrid.js',

},
{
	type		:	'method',
	line		:	'636',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'input ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'643',
	file		:	'./grid/resultsassemblygrid.js',
	className	:	'ResultsAssemblyGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	line		:	'1',
	file		:	'./grid/primarydataprocessinggrid.js',
	className	:	'PrimaryDataProcessingGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'7',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'update ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'9',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'refresh ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'11',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'_prepareData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'13',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'_getTbar ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'15',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'_getHTMLRow ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'17',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'openCurveVisualizer ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'19',
	file		:	'./grid/primarydataprocessinggrid.js',
	className		:	'PrimaryDataProcessingGrid',
	name		:	'getStore ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'21',
	file		:	'./grid/primarydataprocessinggrid.js',
	className	:	'PrimaryDataProcessingGrid',
	name		:	'getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'351',
	file		:	'./grid/primarydataprocessinggrid.js',
	className	:	'PrimaryDataProcessingGrid',
	name		:	'_getPorod ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'389',
	file		:	'./grid/primarydataprocessinggrid.js',
	className	:	'PrimaryDataProcessingGrid',
	name		:	'getPanel ',
	parameters	:	[' data '],

},
{
	line		:	'1',
	file		:	'./grid/abinitiogrid.js',
	className	:	'AbinitioGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'7',
	file		:	'./grid/abinitiogrid.js',
	className	:	'AbinitioGrid',
	name		:	'refresh ',
	parameters	:	[' data'],

},
{
	type		:	'method',
	line		:	'11',
	file		:	'./grid/abinitiogrid.js',
	className	:	'AbinitioGrid',
	name		:	'_prepareData ',
	parameters	:	[' abinitios'],

},
{
	type		:	'method',
	line		:	'39',
	file		:	'./grid/abinitiogrid.js',
	className	:	'AbinitioGrid',
	name		:	'getPanel ',
	parameters	:	[' data'],

},
{
	comments	:	'*   * Macromolecule Grid showing macromolecules and adding anb updating buttons   *    * @height   * @maxHeight   * @width   * @cssFontStyle   * @searchBar makes this grid as Ext.ux.LiveSearchGridPanel   * @tbar top bar containing "Add" and "Update From SMIS" button    * @collapsed   * @collapsible   * @btnEditVisible   * @btnRemoveVisible   * @multiselect makes it multiselect using Ext.selection.CheckboxModel   *    * #onSelected   * #onMacromoleculesChanged   ',
	line		:	'1',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'63',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'edit ',
	parameters	:	[' macromoleculeId '],

},
{
	type		:	'method',
	line		:	'73',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'112',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'deselectAll ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'116',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'selectById ',
	parameters	:	[' macromoleculeId '],

},
{
	type		:	'method',
	line		:	'126',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'refresh ',
	parameters	:	[' macromolecules '],

},
{
	type		:	'method',
	line		:	'130',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'190',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'_prepareData ',
	parameters	:	[' macromolecules '],

},
{
	comments	:	'    * Returns the grid *',
	type		:	'method',
	className	:	'MacromoleculeGrid',
	name		:	'getPanel ',
	parameters	:	[' macromolecules '],
	line		:	'192',
	file		:	'./grid/macromoleculegrid.js',

},
{
	type		:	'method',
	line		:	'264',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'270',
	file		:	'./grid/macromoleculegrid.js',
	className	:	'MacromoleculeGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * A shipment may contains one or more cases where sotck solutions and sample plates are stored   *    * @height   * @btnEditVisible   * @btnRemoveVisible   *    * #onEditButtonClicked   * #onAddButtonClicked   * #onRemoveButtonClicked   * #onDuplicateButtonClicked   ',
	line		:	'1',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'26',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'193',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_getTopButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'208',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'refresh ',
	parameters	:	[' dewars '],

},
{
	type		:	'method',
	line		:	'213',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_sort ',
	parameters	:	[' store '],

},
{
	type		:	'method',
	line		:	'217',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_prepareData ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'225',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'getPanel ',
	parameters	:	[' dewars',' plates '],

},
{
	type		:	'method',
	line		:	'231',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_edit ',
	parameters	:	[' dewar '],

},
{
	type		:	'method',
	line		:	'245',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_getStoreFields ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'290',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'_renderGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'361',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'369',
	file		:	'./grid/casegrid.js',
	className	:	'CaseGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * shows shipments   *    * @height   * @width   * @minHeight   * @btnEditVisible   ',
	line		:	'1',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'24',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'_getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'113',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'_getTopButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'145',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'refresh ',
	parameters	:	[' shippings '],

},
{
	type		:	'method',
	line		:	'150',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'_prepareData ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'158',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'getPanel ',
	parameters	:	[' shipments '],

},
{
	type		:	'method',
	line		:	'163',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'edit ',
	parameters	:	[' shippingId '],

},
{
	type		:	'method',
	line		:	'167',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'_getStoreFields ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'184',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'_renderGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'273',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'280',
	file		:	'./grid/shipmentgrid.js',
	className	:	'ShipmentGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'  *   *  Shows a list of experiment AKA data acquisitions   *	@height   *	@sorters    *	@minHeight   *	@gridType: Ext.ux.LiveSearchGridPanel or Ext.grid.Panel   *	@tbar true or false   *	@grouping true or false   *	@width   *	@title   *	#onEditButtonClicked   ',
	line		:	'1',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'67',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'_getFilterTypes ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'71',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'_prepareData ',
	parameters	:	[' rows '],

},
{
	type		:	'method',
	line		:	'112',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'getPanel ',
	parameters	:	[' experiments '],

},
{
	type		:	'method',
	line		:	'117',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'refresh ',
	parameters	:	[' experiments '],

},
{
	type		:	'method',
	line		:	'150',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'_getTopButtons ',
	parameters	:	['  '],

},
{
	comments	:	'    *   * Date format: "YYYY-MM-DD"   ',
	type		:	'method',
	className	:	'ExperimentGrid',
	name		:	'_filterByDate ',
	parameters	:	[' date '],
	line		:	'240',
	file		:	'./grid/experimentgrid.js',

},
{
	comments	:	'    * Only for templates *',
	type		:	'method',
	className	:	'ExperimentGrid',
	name		:	'_removeExperimentById ',
	parameters	:	[' experimentId '],
	line		:	'259',
	file		:	'./grid/experimentgrid.js',

},
{
	type		:	'method',
	line		:	'271',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'_renderGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'376',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'_getColumns ',
	parameters	:	['  '],

},
{
	comments	:	'    * Changes location.href in order to edit the experiment *',
	type		:	'method',
	className	:	'ExperimentGrid',
	name		:	'_editExperiment ',
	parameters	:	[' experimentId '],
	line		:	'555',
	file		:	'./grid/experimentgrid.js',

},
{
	type		:	'method',
	line		:	'563',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'572',
	file		:	'./grid/experimentgrid.js',
	className	:	'ExperimentGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * See ExperimentGrid   *    ',
	line		:	'1',
	file		:	'./grid/templategrid.js',
	className	:	'TemplateGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'15',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_getFilterTypes ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'17',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_prettyPrintMacromolecules ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'19',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_getPercentage ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'21',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_getPercentageCollected ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'23',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'getPercentageMerged ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'25',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_prepareData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'27',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'getPanel ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'29',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_renderGrid ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'31',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_editExperiment ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'33',
	file		:	'./grid/templategrid.js',
	className		:	'TemplateGrid',
	name		:	'_removeExperimentById ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'35',
	file		:	'./grid/templategrid.js',
	className	:	'TemplateGrid',
	name		:	'_getTopButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'64',
	file		:	'./grid/templategrid.js',
	className	:	'TemplateGrid',
	name		:	'refresh ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'74',
	file		:	'./grid/templategrid.js',
	className	:	'TemplateGrid',
	name		:	'_getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'140',
	file		:	'./grid/templategrid.js',
	className	:	'TemplateGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'149',
	file		:	'./grid/templategrid.js',
	className	:	'TemplateGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * It shows buffer grid with a top bar with "Add" button   *    * @height   * @searchBar   * @collapsed   * @width   ',
	line		:	'1',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'32',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'_edit ',
	parameters	:	[' bufferId '],

},
{
	type		:	'method',
	line		:	'41',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'refresh ',
	parameters	:	[' buffers',' experimentId '],

},
{
	type		:	'method',
	line		:	'46',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'_prepareData ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'50',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'_getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'69',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'getPanel ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'161',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'165',
	file		:	'./grid/framegrid.js',
	className	:	'FrameGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	line		:	'177',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'211',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	name		:	'refresh ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'215',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	name		:	'_prepareData ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'234',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	name		:	'_getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'253',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	name		:	'getPanel ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'363',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'367',
	file		:	'./grid/framegrid.js',
	className	:	'PeakGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * Shows measurements with their attributes as specimen, exposure temperature,   * volume to load, transmission etc...   *    * @addBtnMultipleEdit: if true add a button for changing measurements   *                      parameters by choosing multiple measurements. It opens   *                      <span   *                      style="color:blue;">MultipleEditMeasurementGridWindow</span>   * @collapsed: if true it doesnt show buffers measurements   * @editor: hashmap containing columns to be edited. It is an array of a json   *          like editor of Ext   * @selModel   * @collapseBtnEnable   * @removeBtnEnabled Ext.selection.RowModel   * @addBtnEnable   * @updateRowEnabled true/false if update plugin is set to the grid   * @showTitle   * @title   * @isStatusColumnHidden   * @isPriorityColumnHidden   * @isTimeColumnHidden   * @estimateTime   * @margin   * @tbar   * @height   * @maxHeight   * @minHeight   * @width   * @maxWidth   * @resizable   * @experimentColorBased when colors for buffers and macromolecules are not   *                       selected by the proposal but by experiment, so the   *                       number of colors is smaller   *    * #onClick #onSelected #onRemoved #onUpdateTime #onMeasurementChanged   * #onExperimentChanged   ',
	line		:	'1',
	file		:	'./grid/measurementgrid.js',
	className	:	'MeasurementGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'170',
	file		:	'./grid/measurementgrid.js',
	className	:	'MeasurementGrid',
	name		:	'_sortBy ',
	parameters	:	[' sort '],

},
{
	type		:	'method',
	line		:	'186',
	file		:	'./grid/measurementgrid.js',
	className	:	'MeasurementGrid',
	name		:	'_getMenu ',
	parameters	:	['  '],

},
{
	comments	:	'    * Opens WizardWidget for adding new measurements * ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'_openAddMeasurementWindow ',
	parameters	:	[' measurements',' experiments '],
	line		:	'270',
	file		:	'./grid/measurementgrid.js',

},
{
	comments	:	'    ******************************************************************************   * Opens WizardWidget for adding new measurements   *    * @Measurements   * @Experiments experimentList Object   *****************************************************************************',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'_prepareData ',
	parameters	:	[' measurements',' experiments '],
	line		:	'287',
	file		:	'./grid/measurementgrid.js',

},
{
	comments	:	'    *   * Refresh data grid with the measurements and the experiments   *    * @measurements array with measurement3VO objects   * @experiments array with experiments objects   ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'refresh ',
	parameters	:	[' measurements',' experiments '],
	line		:	'345',
	file		:	'./grid/measurementgrid.js',

},
{
	comments	:	'    *   * Set status bar to busy (refreshing icon)   *    * @msg message to be displayed on the bar   ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'_showStatusBarBusy ',
	parameters	:	[' msg '],
	line		:	'349',
	file		:	'./grid/measurementgrid.js',

},
{
	comments	:	'    *   * Set status bar to ready (ok icon)   *    * @msg message to be displayed on the bar   ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'_showStatusBarReady ',
	parameters	:	[' msg '],
	line		:	'356',
	file		:	'./grid/measurementgrid.js',

},
{
	comments	:	'    *   * If updateRowEnabled returns an array with Ext.grid.plugin.RowEditing   ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'_getPlugins ',
	parameters	:	['  '],
	line		:	'363',
	file		:	'./grid/measurementgrid.js',

},
{
	comments	:	'    *   * @key name of the columns mathing the this.editor[key]   ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'_getEditor ',
	parameters	:	[' key '],
	line		:	'395',
	file		:	'./grid/measurementgrid.js',

},
{
	type		:	'method',
	line		:	'402',
	file		:	'./grid/measurementgrid.js',
	className	:	'MeasurementGrid',
	name		:	'getPanel ',
	parameters	:	[' measurements',' experiments '],

},
{
	comments	:	'    * Method for testing * ',
	type		:	'method',
	className	:	'MeasurementGrid',
	name		:	'input ',
	parameters	:	['  '],
	line		:	'862',
	file		:	'./grid/measurementgrid.js',

},
{
	type		:	'method',
	line		:	'873',
	file		:	'./grid/measurementgrid.js',
	className	:	'MeasurementGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'* AnalysisGrid *',
	line		:	'1',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'69',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'refresh ',
	parameters	:	[' data',' args '],

},
{
	type		:	'method',
	line		:	'78',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_getPorod ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'110',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_getFramesColumn ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'161',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'563',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_getButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'592',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_prepareData ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'607',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'getPanel ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'680',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_openVisualizarBySubstractionId ',
	parameters	:	[' record '],

},
{
	type		:	'method',
	line		:	'700',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_edit ',
	parameters	:	[' record '],

},
{
	type		:	'method',
	line		:	'716',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_showCalibration ',
	parameters	:	[' row '],

},
{
	type		:	'method',
	line		:	'752',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'_openVisualizer ',
	parameters	:	[' experimentList',' subtraction',' record '],

},
{
	type		:	'method',
	line		:	'772',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'779',
	file		:	'./grid/analysisgrid.js',
	className	:	'AnalysisGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	line		:	'786',
	file		:	'./grid/analysisgrid.js',
	className	:	'HPLCAnalysisGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'791',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_edit ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'793',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_getColumns ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'795',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_openVisualizarBySubstractionId ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'797',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_openVisualizer ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'799',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_prepareData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'801',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_showCalibration ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'803',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'getPanel ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'805',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'input ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'807',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'test ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'809',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'refresh ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'811',
	file		:	'./grid/analysisgrid.js',
	className		:	'HPLCAnalysisGrid',
	name		:	'_getPorod ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'813',
	file		:	'./grid/analysisgrid.js',
	className	:	'HPLCAnalysisGrid',
	name		:	'_getButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'836',
	file		:	'./grid/analysisgrid.js',
	className	:	'HPLCAnalysisGrid',
	name		:	'_getFramesColumn ',
	parameters	:	['  '],

},
{
	comments	:	'*   * Shows a list of stock solutions with macromolecule, buffer, storage temperature, concentration, shipment and comments   *    * @multiselect allows multiple selection   * @height    * @minHeight   * @width   * @tbar   * @showTitle   * @isPackedVisible shows is stock solution is in a box   * @btnEditVisible shows edit button   * @btnAddVisible   * @btnAddExisting   * @btnUnpackVisible allows to unpack a stock solution   * @btnRemoveVisible allow to remove a stock solution   ',
	line		:	'1',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'62',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'_getColumns ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'194',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'_getTopButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'256',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'refresh ',
	parameters	:	[' stockSolutions '],

},
{
	type		:	'method',
	line		:	'261',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'_prepareData ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'274',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'278',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'edit ',
	parameters	:	[' stockSolutionId '],

},
{
	type		:	'method',
	line		:	'288',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'_getStoreFields ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'326',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'_renderGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'454',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'460',
	file		:	'./grid/stocksolutiongrid.js',
	className	:	'StockSolutionGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * It shows buffer grid with a top bar with "Add" button   *    * @height   * @searchBar   * @collapsed   * @width   ',
	line		:	'1',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'30',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'_edit ',
	parameters	:	[' bufferId '],

},
{
	type		:	'method',
	line		:	'39',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'refresh ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'43',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'_prepareData ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'47',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'_getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'66',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'getPanel ',
	parameters	:	[' buffers '],

},
{
	type		:	'method',
	line		:	'158',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'162',
	file		:	'./grid/buffergrid.js',
	className	:	'BufferGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'                  *   * It shows all the measurements done for a proposal   *    ',
	line		:	'77',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'125',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'update ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'136',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'getTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'140',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'setLimit ',
	parameters	:	[' limit '],

},
{
	type		:	'method',
	line		:	'145',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'refresh ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'156',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'refreshNavigationBar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'162',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'_prepareData ',
	parameters	:	[' records '],

},
{
	type		:	'method',
	line		:	'215',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'getTbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'329',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'_getPorod ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'367',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'_getHTMLRow ',
	parameters	:	[' key',' value',' error',' units',' decimals '],

},
{
	type		:	'method',
	line		:	'385',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'openCurveVisualizerBySelected ',
	parameters	:	[' mergeIds',' subtractionIds '],

},
{
	type		:	'method',
	line		:	'403',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'openCurveVisualizer ',
	parameters	:	[' mergeIds',' subtractionIds '],

},
{
	type		:	'method',
	line		:	'417',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'getStore ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'449',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'getBbar ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'495',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'getPanel ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'606',
	file		:	'./grid/queuegrid.js',
	className	:	'QueueGrid',
	name		:	'getColumns ',
	parameters	:	['  '],

},
{
	line		:	'1',
	file		:	'./grid/fitstructuretoexperimentdatagrid.js',
	className	:	'FitStructureToExperimentDataGrid',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./grid/fitstructuretoexperimentdatagrid.js',
	className	:	'FitStructureToExperimentDataGrid',
	name		:	'getStructuresByMacromolecule ',
	parameters	:	[' macromolecule '],

},
{
	type		:	'method',
	line		:	'17',
	file		:	'./grid/fitstructuretoexperimentdatagrid.js',
	className	:	'FitStructureToExperimentDataGrid',
	name		:	'_prepareData ',
	parameters	:	[' structures',' fits '],

},
{
	type		:	'method',
	line		:	'40',
	file		:	'./grid/fitstructuretoexperimentdatagrid.js',
	className	:	'FitStructureToExperimentDataGrid',
	name		:	'refresh ',
	parameters	:	[' subtractionId',' macromolecule '],

},
{
	type		:	'method',
	line		:	'53',
	file		:	'./grid/fitstructuretoexperimentdatagrid.js',
	className	:	'FitStructureToExperimentDataGrid',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	comments	:	'  * Static method *',
	type		:	'method',
	className	:	'FitStructureToExperimentDataGrid',
	name		:	'RUNFitScattering ',
	parameters	:	[' subtractionId',' structureId '],
	line		:	'142',
	file		:	'./grid/fitstructuretoexperimentdatagrid.js',

},
{
	type		:	'method',
	line		:	'72',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'_prepareData ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'116',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'deselectAll ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'120',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'selectById ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'130',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'getStore ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'134',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'getPlugins ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'227',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'_getRowCombo ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'249',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'_getColumnCombo ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'270',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'_getSlotColumBombo ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'293',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'getPanelByExperiment ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'299',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'refresh ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'305',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'getPanel ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'559',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'566',
	file		:	'./grid/specimengrid.js',
	className	:	'SpecimenGrid',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'4',
	file		:	'./tabs/resulttabs.js',
	className	:	'ResultTabs',
	name		:	'draw ',
	parameters	:	[' targetId',' data',' macromoleculeId '],

},
{
	type		:	'method',
	line		:	'13',
	file		:	'./tabs/resulttabs.js',
	className	:	'ResultTabs',
	name		:	'_splitBySpecimen ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'27',
	file		:	'./tabs/resulttabs.js',
	className	:	'ResultTabs',
	name		:	'_getTabTitle ',
	parameters	:	[' key',' data '],

},
{
	type		:	'method',
	line		:	'34',
	file		:	'./tabs/resulttabs.js',
	className	:	'ResultTabs',
	name		:	'getPanel ',
	parameters	:	[' targetId',' data',' macromoleculeId '],

},
{
	comments	:	'*   * Shows an experiments with the specimens, measurements, analysis tabs where results are shown and the frames widget   *    * @targetId   ',
	line		:	'1',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	parameters	:	['targetId '],

},
{
	type		:	'method',
	line		:	'140',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'_selectFrame ',
	parameters	:	[' frameNumber '],

},
{
	type		:	'method',
	line		:	'150',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'error ',
	parameters	:	[' error '],

},
{
	type		:	'method',
	line		:	'156',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'loadDataMainPlot ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'210',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'_loadIntensityPlotByFrameNumber ',
	parameters	:	[' frameNumber '],

},
{
	type		:	'method',
	line		:	'290',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'_renderScatteringCurve ',
	parameters	:	[' frameNumber '],

},
{
	type		:	'method',
	line		:	'321',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'_postRenderOverviewPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'339',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'_postRenderDetailsPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'349',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'draw ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'354',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'getExperimentTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'359',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'renderDataAcquisition ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'386',
	file		:	'./tabs/hplctabs.js',
	className	:	'HPLCTabs',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	comments	:	'*   * Shows an template with the specimens, measurements and the experiments   * requirement   *    * @targetId   ',
	line		:	'1',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	parameters	:	['targetId '],

},
{
	type		:	'method',
	line		:	'215',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'refreshMeasurement ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'223',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'refreshSpecimen ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'232',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'refresh ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'251',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'error ',
	parameters	:	[' error '],

},
{
	type		:	'method',
	line		:	'258',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'draw ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'262',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getAssemblyTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'267',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getMacromoleculeTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'273',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getBuffersTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'278',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getPlateGroupsTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'283',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getSampleChangerTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'287',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getSpecimenTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'292',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getPlatesTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'297',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getBuffersTip ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'309',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getSpecimensTip ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'330',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getSpecimenContainerHeight ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'343',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getGeneralContainerHeight ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'362',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getExperimentTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'370',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'render ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'447',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'isTemplate ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'454',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'getPanel ',
	parameters	:	[' panel '],

},
{
	type		:	'method',
	line		:	'480',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'input ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'484',
	file		:	'./tabs/templatetabs.js',
	className	:	'TemplateTabs',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	line		:	'1',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	parameters	:	['targetId '],

},
{
	type		:	'method',
	line		:	'50',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'refresh ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'63',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'refreshWithPlates ',
	parameters	:	[' shipment',' plates '],

},
{
	type		:	'method',
	line		:	'70',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'error ',
	parameters	:	[' error '],

},
{
	type		:	'method',
	line		:	'78',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'draw ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'135',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'render ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'139',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'getShipmentHeader ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'179',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'getTabPanel ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'212',
	file		:	'./tabs/shipmenttabs.js',
	className	:	'ShipmentTabs',
	name		:	'getPanel ',
	parameters	:	[' shipment '],

},
{
	comments	:	'  *   * Shows an experiments with the specimens, measurements, analysis tabs where   * results are shown and the frames widget   *    * @targetId   ',
	line		:	'1',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	parameters	:	['targetId '],

},
{
	type		:	'method',
	line		:	'83',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'error ',
	parameters	:	[' error '],

},
{
	type		:	'method',
	line		:	'89',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'draw ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'93',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'refreshAnalysisData ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'102',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'getSpecimenContainerHeight ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'115',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'getExperimentTitle ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'120',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'renderDataAcquisition ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'230',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'isTemplate ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'237',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'update ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'261',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'getPanel ',
	parameters	:	[' panel '],

},
{
	type		:	'method',
	line		:	'284',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'820',
	file		:	'./tabs/experimenttabs.js',
	className	:	'ExperimentTabs',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'2',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'cleanArray ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'4',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'plotAxes ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'6',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'plotRuler ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'8',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'drawSVGVerticalText ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'10',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'getClassColor ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'12',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'getDimensions ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'14',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'calculate ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'16',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'getMedian ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'18',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'pointToPixel ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'20',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'maxValueWhisker ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'22',
	file		:	'./graph/rangewhiskergraph.js',
	className		:	'RangeWhiskerGraph',
	name		:	'refresh ',
	parameters		:	[],

},
{
	comments	:	'    *   * Subclass of GenericGraph   *    * @plotHorizontalByCluster   ',
	line		:	'22',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'37',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'refresh ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'42',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'isNumber ',
	parameters	:	[' value '],

},
{
	comments	:	'    *   There are several different methods for calculating quartiles.[1] This calculator uses a method described by Moore and McCabe to find quartile values.    The same method also used by The TI-83 to calculate quartile values.    With this method, the first quartile is the median of the numbers below the median, the third quartile is the median of the numbers above the median.     http://www.miniwebtool.com/quartile-calculator/   http://www.alcula.com/calculators/statistics/box-plot/     *',
	type		:	'method',
	className	:	'RangeWhiskerGraph',
	name		:	'getQ1 ',
	parameters	:	[' array '],
	line		:	'52',
	file		:	'./graph/rangewhiskergraph.js',

},
{
	type		:	'method',
	line		:	'57',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'getQ3 ',
	parameters	:	[' array '],

},
{
	type		:	'method',
	line		:	'63',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'getQ2 ',
	parameters	:	[' array '],

},
{
	type		:	'method',
	line		:	'67',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'getBelowOutliers ',
	parameters	:	[' belowLimit',' array '],

},
{
	type		:	'method',
	line		:	'77',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'getAboveOutliers ',
	parameters	:	[' aboveLimit',' array '],

},
{
	type		:	'method',
	line		:	'87',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'minValueWhisker ',
	parameters	:	[' belowLimit',' q1',' array '],

},
{
	type		:	'method',
	line		:	'119',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'drawPoints ',
	parameters	:	[' boxProperties '],

},
{
	type		:	'method',
	line		:	'132',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'plotRangeQ1Q3 ',
	parameters	:	[' data',' properties '],

},
{
	type		:	'method',
	line		:	'222',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'plotWhisters ',
	parameters	:	[' data',' properties '],

},
{
	type		:	'method',
	line		:	'264',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'draw ',
	parameters	:	[' targetId',' data '],

},
{
	type		:	'method',
	line		:	'273',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'277',
	file		:	'./graph/rangewhiskergraph.js',
	className	:	'RangeWhiskerGraph',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'35',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'calculate ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'65',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'drawSVGVerticalText ',
	parameters	:	[' x',' y',' text',' properties '],

},
{
	comments	:	'  * Plot the numbers on the axis * ',
	type		:	'method',
	className	:	'GenericGraph',
	name		:	'plotRuler ',
	parameters	:	[' rulerProperties '],
	line		:	'69',
	file		:	'./graph/genericgraph.js',

},
{
	type		:	'method',
	line		:	'106',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'plotAxes ',
	parameters	:	[' properties '],

},
{
	comments	:	'  * Remove nulls and NaN elements in the array * ',
	type		:	'method',
	className	:	'GenericGraph',
	name		:	'cleanArray ',
	parameters	:	[' data '],
	line		:	'128',
	file		:	'./graph/genericgraph.js',

},
{
	type		:	'method',
	line		:	'142',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'refresh ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'147',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'getClassColor ',
	parameters	:	[' className '],

},
{
	type		:	'method',
	line		:	'162',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'getDimensions ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'220',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'draw ',
	parameters	:	[' targetId',' data '],

},
{
	type		:	'method',
	line		:	'227',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'getMedian ',
	parameters	:	[' checked '],

},
{
	type		:	'method',
	line		:	'236',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'pointToPixel ',
	parameters	:	[' value',' boxProperties '],

},
{
	type		:	'method',
	line		:	'242',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'maxValueWhisker ',
	parameters	:	[' aboveLimit',' q3',' array '],

},
{
	type		:	'method',
	line		:	'258',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'262',
	file		:	'./graph/genericgraph.js',
	className	:	'GenericGraph',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'3',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'cleanArray ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'plotAxes ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'7',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'plotRuler ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'9',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'drawSVGVerticalText ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'11',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'getClassColor ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'13',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'getDimensions ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'15',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'calculate ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'17',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'getMedian ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'19',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'pointToPixel ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'21',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'maxValueWhisker ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'23',
	file		:	'./graph/boxwhiskergraph.js',
	className		:	'BoxWhiskerGraph',
	name		:	'refresh ',
	parameters		:	[],

},
{
	comments	:	'    *   * Subclass of GenericGraph   *    * @maxBoxWidth   ',
	line		:	'23',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	parameters	:	['args'],

},
{
	comments	:	'        *  There are several different methods for calculating quartiles.[1] This calculator uses a method described by Moore and McCabe to find quartile values.   The same method also used by The TI-83 to calculate quartile values.   With this method, the first quartile is the median of the numbers below the median, the third quartile is the median of the numbers above the median.    http://www.miniwebtool.com/quartile-calculator/  http://www.alcula.com/calculators/statistics/box-plot/  *',
	type		:	'method',
	className	:	'BoxWhiskerGraph',
	name		:	'getQ1 ',
	parameters	:	[' array'],
	line		:	'36',
	file		:	'./graph/boxwhiskergraph.js',

},
{
	type		:	'method',
	line		:	'41',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'getQ3 ',
	parameters	:	[' array'],

},
{
	type		:	'method',
	line		:	'47',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'getQ2 ',
	parameters	:	[' array'],

},
{
	type		:	'method',
	line		:	'51',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'getBelowOutliers ',
	parameters	:	[' belowLimit',' array'],

},
{
	type		:	'method',
	line		:	'61',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'getAboveOutliers ',
	parameters	:	[' aboveLimit',' array'],

},
{
	type		:	'method',
	line		:	'72',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'minValueWhisker ',
	parameters	:	[' belowLimit',' q1',' array'],

},
{
	type		:	'method',
	line		:	'88',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'isNumber ',
	parameters	:	[' value'],

},
{
	type		:	'method',
	line		:	'96',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'plotBoxWhisker ',
	parameters	:	[' boxProperties'],

},
{
	type		:	'method',
	line		:	'172',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'plotClusterTitles ',
	parameters	:	[' properties'],

},
{
	type		:	'method',
	line		:	'202',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'plotWhisters ',
	parameters	:	[' data',' properties'],

},
{
	type		:	'method',
	line		:	'237',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'draw ',
	parameters	:	[' targetId',' data'],

},
{
	type		:	'method',
	line		:	'246',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'input ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'250',
	file		:	'./graph/boxwhiskergraph.js',
	className	:	'BoxWhiskerGraph',
	name		:	'test ',
	parameters	:	[' targetId'],

},
{
	type		:	'method',
	line		:	'18',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'draw ',
	parameters	:	[' dataset',' formatter',' layout '],

},
{
	comments	:	'  * SELECT VERTICES BY NAME * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectVertexByName ',
	parameters	:	[' vertexName '],
	line		:	'35',
	file		:	'./graph/networkwidget.js',

},
{
	type		:	'method',
	line		:	'47',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'selectVerticesByName ',
	parameters	:	[' verticesName '],

},
{
	comments	:	'  * SELECT VERTICES BY ID * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectVertexById ',
	parameters	:	[' vertexId '],
	line		:	'51',
	file		:	'./graph/networkwidget.js',

},
{
	type		:	'method',
	line		:	'56',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'selectVerticesById ',
	parameters	:	[' verticesId '],

},
{
	comments	:	'  * VECINDARIO * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectNeighbourhood ',
	parameters	:	['  '],
	line		:	'60',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * DESELECT * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'deselectNodes ',
	parameters	:	['  '],
	line		:	'63',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * SELECT ALL NODES * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectAllNodes ',
	parameters	:	['  '],
	line		:	'65',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * SELECT EVERYTHING * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectAll ',
	parameters	:	['  '],
	line		:	'67',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * SELECT ALL EDGES * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectAllEdges ',
	parameters	:	['  '],
	line		:	'69',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * ZOOM * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'setScale ',
	parameters	:	[' value '],
	line		:	'71',
	file		:	'./graph/networkwidget.js',

},
{
	type		:	'method',
	line		:	'75',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'getScale ',
	parameters	:	['  '],

},
{
	comments	:	'  * SELECT ADJACENT VERTICES FROM SELECTED VERTICES * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectAdjacent ',
	parameters	:	['  '],
	line		:	'77',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * SELECT EDGES FROM SELECTED VERTICES * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectEdgesFromVertices ',
	parameters	:	['  '],
	line		:	'90',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * BLINKING * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'blinkVertexById ',
	parameters	:	[' vertexId '],
	line		:	'101',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * COMPONENTE CONEXA DE LOS NODOS SELECCIONADOS * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'selectConnectedComponent ',
	parameters	:	['  '],
	line		:	'103',
	file		:	'./graph/networkwidget.js',

},
{
	type		:	'method',
	line		:	'109',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'getConnectedComponent ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'124',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'visitNode ',
	parameters	:	[' nodeId',' nodosVisitados',' aristasVisitadas',' arrNodos',' arrAristas '],

},
{
	comments	:	'  * COLLAPSE SELECTED VERTICES * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'collapse ',
	parameters	:	['  '],
	line		:	'144',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * SETTER FONT SIZE * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'setVerticesFontSize ',
	parameters	:	[' value '],
	line		:	'186',
	file		:	'./graph/networkwidget.js',

},
{
	comments	:	'  * GETTERS * ',
	type		:	'method',
	className	:	'NetworkWidget',
	name		:	'getFormatter ',
	parameters	:	['  '],
	line		:	'192',
	file		:	'./graph/networkwidget.js',

},
{
	type		:	'method',
	line		:	'195',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'getLayout ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'199',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'getDataset ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'203',
	file		:	'./graph/networkwidget.js',
	className	:	'NetworkWidget',
	name		:	'getGraphCanvas ',
	parameters	:	['  '],

},
{
	line		:	'2',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'59',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'getMenu ',
	parameters	:	['   '],

},
{
	comments	:	'    * Looks for the maximum value and then divide everything but that value *',
	type		:	'method',
	className	:	'HPLCGraph',
	name		:	'scaledData ',
	parameters	:	['  data '],
	line		:	'118',
	file		:	'./graph/hplcgraph.js',

},
{
	comments	:	'      * Given a stat float[] and a max number it will divide each value by max *',
	type		:	'method',
	className	:	'HPLCGraph',
	name		:	'divideValuesByMax ',
	parameters	:	['  stat',' max '],
	line		:	'125',
	file		:	'./graph/hplcgraph.js',

},
{
	comments	:	'    * returns max value of a stat *',
	type		:	'method',
	className	:	'HPLCGraph',
	name		:	'getMaxAndMinValue ',
	parameters	:	['  stat '],
	line		:	'133',
	file		:	'./graph/hplcgraph.js',

},
{
	type		:	'method',
	line		:	'153',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'getPoint ',
	parameters	:	['  data',' i '],

},
{
	type		:	'method',
	line		:	'168',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'reloadData ',
	parameters	:	[' hplcData '],

},
{
	type		:	'method',
	line		:	'263',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'_renderDygraph ',
	parameters	:	['  parsed',' colors',' labels '],

},
{
	type		:	'method',
	line		:	'299',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'loadData ',
	parameters	:	['  data '],

},
{
	type		:	'method',
	line		:	'358',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'getPanel ',
	parameters	:	['   '],

},
{
	type		:	'method',
	line		:	'374',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'input ',
	parameters	:	['   '],

},
{
	type		:	'method',
	line		:	'378',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'getDataByFrameNumber ',
	parameters	:	['  frameNumber '],

},
{
	type		:	'method',
	line		:	'389',
	file		:	'./graph/hplcgraph.js',
	className	:	'HPLCGraph',
	name		:	'test ',
	parameters	:	['  targetId '],

},
{
	line		:	'411',
	file		:	'./graph/hplcgraph.js',
	className	:	'MergesHPLCGraph',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'420',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'scaledData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'422',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'divideValuesByMax ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'424',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'getMaxAndMinValue ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'426',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'getPoint ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'428',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'reloadData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'430',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'_renderDygraph ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'432',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'loadData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'434',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'getPanel ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'436',
	file		:	'./graph/hplcgraph.js',
	className		:	'MergesHPLCGraph',
	name		:	'getDataByFrameNumber ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'439',
	file		:	'./graph/hplcgraph.js',
	className	:	'MergesHPLCGraph',
	name		:	'setPeaks ',
	parameters	:	['  data '],

},
{
	type		:	'method',
	line		:	'457',
	file		:	'./graph/hplcgraph.js',
	className	:	'MergesHPLCGraph',
	name		:	'getMenu ',
	parameters	:	['   '],

},
{
	type		:	'method',
	line		:	'542',
	file		:	'./graph/hplcgraph.js',
	className	:	'MergesHPLCGraph',
	name		:	'input ',
	parameters	:	['   '],

},
{
	type		:	'method',
	line		:	'546',
	file		:	'./graph/hplcgraph.js',
	className	:	'MergesHPLCGraph',
	name		:	'test ',
	parameters	:	['  targetId '],

},
{
	type		:	'method',
	line		:	'48',
	file		:	'./utils/genericwindow.js',
	className	:	'GenericWindow',
	name		:	'getButtons ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'75',
	file		:	'./utils/genericwindow.js',
	className	:	'GenericWindow',
	name		:	'save ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'79',
	file		:	'./utils/genericwindow.js',
	className	:	'GenericWindow',
	name		:	'_postRender ',
	parameters	:	[' data',' experiment'],

},
{
	type		:	'method',
	line		:	'84',
	file		:	'./utils/genericwindow.js',
	className	:	'GenericWindow',
	name		:	'draw ',
	parameters	:	['  data',' experiment'],

},
{
	type		:	'method',
	line		:	'88',
	file		:	'./utils/genericwindow.js',
	className	:	'GenericWindow',
	name		:	'refresh ',
	parameters	:	[' data',' experiment'],

},
{
	type		:	'method',
	line		:	'94',
	file		:	'./utils/genericwindow.js',
	className	:	'GenericWindow',
	name		:	'_render ',
	parameters	:	[' data',' experiment'],

},
{
	type		:	'method',
	line		:	'34',
	file		:	'./widget/warningwidget.js',
	className	:	'WarningWidget',
	name		:	'draw ',
	parameters	:	[' warning '],

},
{
	comments	:	'*   * Edit the information of a buffer   *    * #onSaved #onRemoveAdditive   ',
	line		:	'1',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'7',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getPlotContainerDimensions ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'14',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getPlotId ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'18',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getTextAreaHeight ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'22',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getPlotContainer ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'56',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getSecondaryContainerDimensions ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'65',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getPdbId ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'70',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getPdbContainer ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'94',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getDataContainer ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'104',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getSummaryContainer ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'121',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'161',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'refreshPlot ',
	parameters	:	[' fitStructureToExperimentalDataId '],

},
{
	type		:	'method',
	line		:	'214',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'refreshPdbViz ',
	parameters	:	[' structureId'],

},
{
	type		:	'method',
	line		:	'229',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'refreshOutputfileContent ',
	parameters	:	[' fitStructureToExperimentalDataId'],

},
{
	type		:	'method',
	line		:	'241',
	file		:	'./widget/fitstructuretodatawidget.js',
	className	:	'FitStructureToDataWidget',
	name		:	'refresh ',
	parameters	:	[' fitStructureToExperimentalDataId',' structureId '],

},
{
	line		:	'1',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'26',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'draw ',
	parameters	:	['  '],

},
{
	comments	:	'  *   * Get the path of the average files   ',
	type		:	'method',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getPrefixes ',
	parameters	:	['  record'],
	line		:	'35',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',

},
{
	type		:	'method',
	line		:	'57',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getFrames ',
	parameters	:	['  merges',' experimentList'],

},
{
	type		:	'method',
	line		:	'94',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getAverages ',
	parameters	:	['  merges',' experimentList'],

},
{
	type		:	'method',
	line		:	'128',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getSubtractionByDataCollectionId ',
	parameters	:	['  dataCollectionId',' experimentList'],

},
{
	comments	:	'    *   * For multiple averages for the same measurementId this methods return the last mergeId processed that should be   * the one with most of frames   ',
	type		:	'method',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'getLastMerges ',
	parameters	:	['  merges',' experimentList',' dataCollectionId'],
	line		:	'135',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',

},
{
	type		:	'method',
	line		:	'160',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_prepareData ',
	parameters	:	['  merges',' experimentList',' dataCollectionId',' record'],

},
{
	type		:	'method',
	line		:	'224',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_renderSpecimenBox ',
	parameters	:	['  merges',' experimentList',' dataCollectionId',' record'],

},
{
	type		:	'method',
	line		:	'273',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getImageHTML ',
	parameters	:	['  title',' type',' subtractionId',' height',' width'],

},
{
	type		:	'method',
	line		:	'279',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'refresh ',
	parameters	:	['  merges',' experimentList',' dataCollectionId',' record'],

},
{
	type		:	'method',
	line		:	'309',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getSpecimenColor ',
	parameters	:	['  specimen',' merge',' experimentList',' dataCollectionId',' merged',' type'],

},
{
	type		:	'method',
	line		:	'332',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getDataStore ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'347',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'getLegendGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'356',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'getSettingsPanel ',
	parameters	:	['  width'],

},
{
	type		:	'method',
	line		:	'386',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'getFrameGrid ',
	parameters	:	['  store',' width',' height',' title',' selectionMode'],

},
{
	type		:	'method',
	line		:	'443',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'getGrid ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'456',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_renderPlotFromData ',
	parameters	:	['  data'],

},
{
	type		:	'method',
	line		:	'528',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_renderDygraph ',
	parameters	:	['  targetId',' parsed',' colors',' labels'],

},
{
	type		:	'method',
	line		:	'540',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_getCoordinates ',
	parameters	:	['  y',' error'],

},
{
	type		:	'method',
	line		:	'556',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'_renderPlot ',
	parameters	:	['  selected'],

},
{
	type		:	'method',
	line		:	'593',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'DataCollectionCurveVisualizer',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	line		:	'696',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'CurveVisualizer',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'716',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'draw ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'718',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getPrefixes ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'720',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getFrames ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'722',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getAverages ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'724',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getSubtractionByDataCollectionId ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'726',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'getLastMerges ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'728',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_prepareData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'730',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getImageHTML ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'732',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getDataStore ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'734',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'getLegendGrid ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'736',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'getSettingsPanel ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'738',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'getGrid ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'740',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_renderPlotFromData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'742',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_getCoordinates ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'744',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'CurveVisualizer',
	name		:	'_renderPlot ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'746',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'CurveVisualizer',
	name		:	'refresh ',
	parameters	:	[' mergeIdsList'],

},
{
	type		:	'method',
	line		:	'814',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'CurveVisualizer',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'838',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'CurveVisualizer',
	name		:	'getFrameGrid ',
	parameters	:	['  store',' width',' height',' title',' selectionMode'],

},
{
	type		:	'method',
	line		:	'911',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'CurveVisualizer',
	name		:	'_renderDygraph ',
	parameters	:	['  targetId',' parsed',' colors',' labels'],

},
{
	comments	:	'      *  SUBTRACTION CURVE VISUALIZER  *',
	line		:	'919',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'SubtractionCurveVisualizer',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'939',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'draw ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'941',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_getFrames ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'943',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_getAverages ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'945',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_getSubtractionByDataCollectionId ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'947',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'getLastMerges ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'949',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_prepareData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'951',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_getImageHTML ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'953',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_getDataStore ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'955',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'getGrid ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'957',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_renderPlotFromData ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'959',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className		:	'SubtractionCurveVisualizer',
	name		:	'_getCoordinates ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'961',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'SubtractionCurveVisualizer',
	name		:	'refresh ',
	parameters	:	[' mergeIdsList',' subtractionIdList'],

},
{
	type		:	'method',
	line		:	'1123',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'SubtractionCurveVisualizer',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'1147',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'SubtractionCurveVisualizer',
	name		:	'getFrameGrid ',
	parameters	:	['  store',' width',' height',' title',' selectionMode'],

},
{
	type		:	'method',
	line		:	'1223',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'SubtractionCurveVisualizer',
	name		:	'_renderDygraph ',
	parameters	:	['  targetId',' parsed',' colors',' labels'],

},
{
	type		:	'method',
	line		:	'1234',
	file		:	'./widget/window/datacollectioncurvevisualizer.js',
	className	:	'SubtractionCurveVisualizer',
	name		:	'_renderPlot ',
	parameters	:	['  selected'],

},
{
	comments	:	'*   *    * DataCollectionFrameTree a list tree with the 1D files sorted by: none, macromolecules, datacollections   *    * @height   * #onSelectionChanged when clicked on an item   ',
	line		:	'1',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'17',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	comments	:	'    * Macromolecule Grid *',
	type		:	'method',
	className	:	'DataCollectionFrameTree',
	name		:	'getListGrid ',
	parameters	:	['  '],
	line		:	'46',
	file		:	'./widget/window/datacollectionframetree.js',

},
{
	type		:	'method',
	line		:	'83',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getDataCollectionCode ',
	parameters	:	[' dataCollection '],

},
{
	type		:	'method',
	line		:	'94',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getCollectionNode ',
	parameters	:	[' dataCollection',' merges '],

},
{
	type		:	'method',
	line		:	'102',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getData ',
	parameters	:	[' dataCollections',' merges '],

},
{
	type		:	'method',
	line		:	'111',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getSpecimenByMeasurementId ',
	parameters	:	[' measurementId '],

},
{
	type		:	'method',
	line		:	'116',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getMacromoleculeByMeasurementId ',
	parameters	:	[' measurementId '],

},
{
	type		:	'method',
	line		:	'121',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getMeasurements ',
	parameters	:	[' dataCollection',' merges '],

},
{
	type		:	'method',
	line		:	'157',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getFrames ',
	parameters	:	[' measurementId',' merges '],

},
{
	type		:	'method',
	line		:	'191',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getFramesNoAverage ',
	parameters	:	[' measurementId',' merges '],

},
{
	type		:	'method',
	line		:	'217',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getSpecimenById ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'227',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'loadDatacollections ',
	parameters	:	[' dataCollections',' merges',' experiments '],

},
{
	type		:	'method',
	line		:	'248',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getDataCollectionById ',
	parameters	:	[' dataCollectionId '],

},
{
	type		:	'method',
	line		:	'258',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'notifySelectionChanged ',
	parameters	:	[' frameListSelectedIds '],

},
{
	type		:	'method',
	line		:	'267',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'getFramesTree ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'353',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'357',
	file		:	'./widget/window/datacollectionframetree.js',
	className	:	'DataCollectionFrameTree',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'48',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'drawPlate ',
	parameters	:	[' experiment',' plate',' targetId'],

},
{
	type		:	'method',
	line		:	'74',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'drawPlates ',
	parameters	:	[' experiment'],

},
{
	type		:	'method',
	line		:	'88',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'_sortPlates ',
	parameters	:	[' a',' b '],

},
{
	type		:	'method',
	line		:	'92',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'getPlates ',
	parameters	:	[' experiment'],

},
{
	type		:	'method',
	line		:	'126',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'selectSpecimens ',
	parameters	:	[' specimens'],

},
{
	type		:	'method',
	line		:	'136',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'selectSpecimen ',
	parameters	:	[' specimen'],

},
{
	type		:	'method',
	line		:	'149',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'refresh ',
	parameters	:	[' experiment'],

},
{
	type		:	'method',
	line		:	'164',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'_getAutoFillButton ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'217',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'_getZoomButton ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'281',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'_getEmptyButton ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'334',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'_getPlateTypes ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'418',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'getBbar ',
	parameters	:	[' experiment'],

},
{
	type		:	'method',
	line		:	'437',
	file		:	'./widget/sampleplategroup_v2.js',
	className	:	'SamplePlateGroupWidget',
	name		:	'getPanel ',
	parameters	:	[' experiment'],

},
{
	comments	:	'*   *    * @nodeSize   * @fontSize   * @strokeWidth   * @showTooltip   * @showBorderLabels   * @showFullName   * @showLabels   * @backgroundColor   *    *',
	line		:	'1',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'66',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'clear ',
	parameters	:	[' experiment',' samplePlate',' targetId '],

},
{
	type		:	'method',
	line		:	'72',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'draw ',
	parameters	:	[' experiment',' samplePlate',' targetId',' windowContainerId '],

},
{
	type		:	'method',
	line		:	'165',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'drawBorders ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'201',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'addOkIcon ',
	parameters	:	[' x',' y',' id',' specimen '],

},
{
	type		:	'method',
	line		:	'227',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'selectSpecimen ',
	parameters	:	[' specimen '],

},
{
	type		:	'method',
	line		:	'235',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'clearSelection ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'243',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'getVertexByPosition ',
	parameters	:	[' row',' column '],

},
{
	type		:	'method',
	line		:	'267',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'showLabel ',
	parameters	:	[' row',' column',' specimen '],

},
{
	type		:	'method',
	line		:	'288',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'getNodeIdBySpecimenId ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'292',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'markSpecimenAsOk ',
	parameters	:	[' specimen',' x',' y',' id '],

},
{
	comments	:	'  *   * Input: specimenId of the sample containing a macromolecule   * Ouput: color of the specimen buffer associated   ',
	type		:	'method',
	className	:	'SamplePlateWidget',
	name		:	'getSpecimenBufferColorFromSampleSpecimenId ',
	parameters	:	[' specimenId '],
	line		:	'302',
	file		:	'./widget/sampleplatewidget.js',

},
{
	type		:	'method',
	line		:	'320',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'fillWell ',
	parameters	:	[' row',' column',' specimen '],

},
{
	type		:	'method',
	line		:	'408',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'_getToolTipContent ',
	parameters	:	[' specimen '],

},
{
	type		:	'method',
	line		:	'428',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'fillSimulator ',
	parameters	:	[' samples '],

},
{
	type		:	'method',
	line		:	'441',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'relayout ',
	parameters	:	[' network',' rows',' columns '],

},
{
	type		:	'method',
	line		:	'450',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'squareRelayout ',
	parameters	:	[' network',' rows',' columns '],

},
{
	type		:	'method',
	line		:	'485',
	file		:	'./widget/sampleplatewidget.js',
	className	:	'SamplePlateWidget',
	name		:	'circleRelayout ',
	parameters	:	[' network',' rows',' columns '],

},
{
	type		:	'method',
	line		:	'13',
	file		:	'./widget/calendarwidget.js',
	className	:	'CalendarWidget',
	name		:	'loadData ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'39',
	file		:	'./widget/calendarwidget.js',
	className	:	'CalendarWidget',
	name		:	'draw ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'28',
	file		:	'./widget/wizard/finalstepwizardform.js',
	className	:	'FinalStepWizardForm',
	name		:	'getForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'61',
	file		:	'./widget/wizard/finalstepwizardform.js',
	className	:	'FinalStepWizardForm',
	name		:	'getNextForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'65',
	file		:	'./widget/wizard/finalstepwizardform.js',
	className	:	'FinalStepWizardForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'69',
	file		:	'./widget/wizard/finalstepwizardform.js',
	className	:	'FinalStepWizardForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'* MACROMOLECULES SELECTOR *',
	line		:	'1',
	file		:	'./widget/wizard/macromoleculeselectorwizardform.js',
	className	:	'MacromoleculeSelectorWizardForm',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'20',
	file		:	'./widget/wizard/macromoleculeselectorwizardform.js',
	className	:	'MacromoleculeSelectorWizardForm',
	name		:	'reload ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'28',
	file		:	'./widget/wizard/macromoleculeselectorwizardform.js',
	className	:	'MacromoleculeSelectorWizardForm',
	name		:	'getForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'78',
	file		:	'./widget/wizard/macromoleculeselectorwizardform.js',
	className	:	'MacromoleculeSelectorWizardForm',
	name		:	'getNextForm ',
	parameters	:	['  '],

},
{
	comments	:	'*   * Class for managing wizards   *    * @title   * @description   * @data   * @onNextFn   * @onBackFn   *',
	line		:	'1',
	file		:	'./widget/wizard/genericstepwizardform.js',
	className	:	'GenericStepWizardForm',
	parameters	:	['title',' description',' data',' onNextFn',' onBackFn'],

},
{
	type		:	'method',
	line		:	'10',
	file		:	'./widget/wizard/genericstepwizardform.js',
	className	:	'GenericStepWizardForm',
	name		:	'getForm ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'15',
	file		:	'./widget/wizard/genericstepwizardform.js',
	className	:	'GenericStepWizardForm',
	name		:	'getNextForm ',
	parameters	:	[' '],

},
{
	comments	:	'    * When coming back to the same form *',
	type		:	'method',
	className	:	'GenericStepWizardForm',
	name		:	'reload ',
	parameters	:	[' '],
	line		:	'17',
	file		:	'./widget/wizard/genericstepwizardform.js',

},
{
	type		:	'method',
	line		:	'21',
	file		:	'./widget/wizard/experimenttypesetepwizardform.js',
	className	:	'ExperimentTypeWizardForm',
	name		:	'getForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'52',
	file		:	'./widget/wizard/experimenttypesetepwizardform.js',
	className	:	'ExperimentTypeWizardForm',
	name		:	'getNextForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'56',
	file		:	'./widget/wizard/experimenttypesetepwizardform.js',
	className	:	'ExperimentTypeWizardForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'60',
	file		:	'./widget/wizard/experimenttypesetepwizardform.js',
	className	:	'ExperimentTypeWizardForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	line		:	'1',
	file		:	'./widget/wizard/wizardwidget.js',
	className	:	'WizardWidget',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'20',
	file		:	'./widget/wizard/wizardwidget.js',
	className	:	'WizardWidget',
	name		:	'draw ',
	parameters	:	[' targetId',' form '],

},
{
	type		:	'method',
	line		:	'26',
	file		:	'./widget/wizard/wizardwidget.js',
	className	:	'WizardWidget',
	name		:	'getButtons ',
	parameters	:	[' step',' onNext',' onBack '],

},
{
	type		:	'method',
	line		:	'95',
	file		:	'./widget/wizard/wizardwidget.js',
	className	:	'WizardWidget',
	name		:	'renderMasterContainer ',
	parameters	:	['  '],

},
{
	comments	:	'* MEASUREMENTS SELECTOR *',
	line		:	'1',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	parameters	:	['macromolecules',' args '],

},
{
	type		:	'method',
	line		:	'41',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'setData ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'74',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'getSingleMeasurementForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'227',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'getConcentrationMeasurementForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'388',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'getForm ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'443',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'getBuffers ',
	parameters	:	[' measurements '],

},
{
	type		:	'method',
	line		:	'502',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'parseMeasurements ',
	parameters	:	[' measurements '],

},
{
	type		:	'method',
	line		:	'592',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'MeasurementCreatorStepWizardForm',
	name		:	'getNextForm ',
	parameters	:	['  '],

},
{
	line		:	'601',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'SampleAutomaticPositionFactory',
	parameters	:	['sampleParsed'],

},
{
	type		:	'method',
	line		:	'606',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'SampleAutomaticPositionFactory',
	name		:	'getAvailablePlates ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'668',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'SampleAutomaticPositionFactory',
	name		:	'_getKey ',
	parameters	:	[' plate',' row',' well '],

},
{
	type		:	'method',
	line		:	'672',
	file		:	'./widget/wizard/measurementcreatorstepwizardform.js',
	className	:	'SampleAutomaticPositionFactory',
	name		:	'setPosition ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'35',
	file		:	'./widget/shippingwidget.js',
	className	:	'ShippingWidget',
	name		:	'draw ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'40',
	file		:	'./widget/shippingwidget.js',
	className	:	'ShippingWidget',
	name		:	'renderPanel ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'70',
	file		:	'./widget/shippingwidget.js',
	className	:	'ShippingWidget',
	name		:	'refresh ',
	parameters	:	['  '],

},
{
	comments	:	'*   * It shows an slider for qualityThreshold and radiationDamageThreshold   *    * @qualityThreshold between 0 and 1   * @radiationDamageThreshold between 0 and 1   *    * #onQualityChanged   * #onRadiationDatamageChanged   ',
	line		:	'1',
	file		:	'./widget/qualitycontrolresultswidget.js',
	className	:	'QualityControlResultsWidget',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'20',
	file		:	'./widget/qualitycontrolresultswidget.js',
	className	:	'QualityControlResultsWidget',
	name		:	'getPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'96',
	file		:	'./widget/qualitycontrolresultswidget.js',
	className	:	'QualityControlResultsWidget',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'100',
	file		:	'./widget/qualitycontrolresultswidget.js',
	className	:	'QualityControlResultsWidget',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'refresh ',
	parameters	:	[' subtractionId '],

},
{
	type		:	'method',
	line		:	'9',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getMacromolecule ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'18',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getMacromoleculeContainer ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'78',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getBufferContainer ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'132',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getSpecimenContainer ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'158',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getSeparator ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'165',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getFitStructurePanel ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'200',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getFitStructurePanelWorkflow ',
	parameters	:	[' data '],

},
{
	comments	:	' * Static method *',
	type		:	'method',
	className	:	'DataCollectionWidget',
	name		:	'RUNFitScattering ',
	parameters	:	[' subtractionId',' structureId '],
	line		:	'243',
	file		:	'./widget/datacollectionwidget.js',

},
{
	type		:	'method',
	line		:	'279',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getAdvancedTab ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'296',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getTabs ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'330',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getPanel ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'352',
	file		:	'./widget/datacollectionwidget.js',
	className	:	'DataCollectionWidget',
	name		:	'getModelViz ',
	parameters	:	[' data '],

},
{
	comments	:	'  *  * PRIMARY DATA PROCESSING  ',
	type		:	'method',
	className	:	'DataCollectionWidget',
	name		:	'getPrimaryDataProcessingContainer ',
	parameters	:	[' data '],
	line		:	'358',
	file		:	'./widget/datacollectionwidget.js',

},
{
	comments	:	'  *  * getAbinitioModellingContainer  ',
	type		:	'method',
	className	:	'DataCollectionWidget',
	name		:	'getAbinitioModellingContainer ',
	parameters	:	[' data '],
	line		:	'392',
	file		:	'./widget/datacollectionwidget.js',

},
{
	comments	:	'*   * It shows a table with the guinier and gnom data as well as passed and   * discarded measurements   *    * @height   * @showBufferColumns   ',
	line		:	'1',
	file		:	'./widget/concentrationhtmltablewidget.js',
	className	:	'ConcentrationHTMLTableWidget',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'16',
	file		:	'./widget/concentrationhtmltablewidget.js',
	className	:	'ConcentrationHTMLTableWidget',
	name		:	'refresh ',
	parameters	:	[' parsedData '],

},
{
	type		:	'method',
	line		:	'20',
	file		:	'./widget/concentrationhtmltablewidget.js',
	className	:	'ConcentrationHTMLTableWidget',
	name		:	'getPanel ',
	parameters	:	[' parsedData '],

},
{
	type		:	'method',
	line		:	'87',
	file		:	'./widget/concentrationhtmltablewidget.js',
	className	:	'ConcentrationHTMLTableWidget',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'526',
	file		:	'./widget/concentrationhtmltablewidget.js',
	className	:	'ConcentrationHTMLTableWidget',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   *    * @width   * @height   *    ',
	line		:	'1',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'25',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getPDBViewerPanel ',
	parameters	:	[' model',' width',' height '],

},
{
	type		:	'method',
	line		:	'34',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'get2x2 ',
	parameters	:	[' models',' colors '],

},
{
	type		:	'method',
	line		:	'50',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getContainers ',
	parameters	:	[' models '],

},
{
	type		:	'method',
	line		:	'79',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getColors ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'87',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getPDBPanel ',
	parameters	:	[' items '],

},
{
	comments	:	'    * type is fir or fit *',
	type		:	'method',
	className	:	'DataCollectionPDBWidget',
	name		:	'_getFirHTML ',
	parameters	:	[' modelId',' width',' height',' type',' desc '],
	line		:	'102',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',

},
{
	type		:	'method',
	line		:	'111',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getNSDPlot ',
	parameters	:	[' width',' height '],

},
{
	type		:	'method',
	line		:	'124',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getCHI2Plot ',
	parameters	:	[' width',' height '],

},
{
	type		:	'method',
	line		:	'136',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getImagesPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'173',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'draw ',
	parameters	:	[' data',' targetId '],

},
{
	type		:	'method',
	line		:	'247',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getDamaverModel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'261',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getDamfiltModel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'275',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getDammin ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'289',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'refresh ',
	parameters	:	[' models '],

},
{
	type		:	'method',
	line		:	'295',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getModels ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'345',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'getMenu ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'401',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'407',
	file		:	'./widget/pdb/datacollectionpdbwidget.js',
	className	:	'DataCollectionPDBWidget',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'51',
	file		:	'./widget/prepareexperimentwidget.js',
	className	:	'PrepareExperimentWidget',
	name		:	'draw ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'57',
	file		:	'./widget/prepareexperimentwidget.js',
	className	:	'PrepareExperimentWidget',
	name		:	'renderPanel ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'87',
	file		:	'./widget/prepareexperimentwidget.js',
	className	:	'PrepareExperimentWidget',
	name		:	'getTemplates ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'101',
	file		:	'./widget/prepareexperimentwidget.js',
	className	:	'PrepareExperimentWidget',
	name		:	'getProposal ',
	parameters	:	['  '],

},
{
	comments	:	'  *   * #onSaved   ',
	line		:	'1',
	file		:	'./window/experimentwindow.js',
	className	:	'ExperimentWindow',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'14',
	file		:	'./window/experimentwindow.js',
	className	:	'ExperimentWindow',
	name		:	'getButtons ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'51',
	file		:	'./window/experimentwindow.js',
	className	:	'ExperimentWindow',
	name		:	'show ',
	parameters	:	[' experiment'],

},
{
	line		:	'1',
	file		:	'./window/multipleeditmeasurementgridwindow.js',
	className	:	'MultipleEditMeasurementGridWindow',

},
{
	type		:	'method',
	line		:	'58',
	file		:	'./window/multipleeditmeasurementgridwindow.js',
	className	:	'MultipleEditMeasurementGridWindow',
	name		:	'getMacromoleculeCombo ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'70',
	file		:	'./window/multipleeditmeasurementgridwindow.js',
	className	:	'MultipleEditMeasurementGridWindow',
	name		:	'getBufferCombo ',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'81',
	file		:	'./window/multipleeditmeasurementgridwindow.js',
	className	:	'MultipleEditMeasurementGridWindow',
	name		:	'save ',
	parameters	:	[' parameter',' value'],

},
{
	type		:	'method',
	line		:	'109',
	file		:	'./window/multipleeditmeasurementgridwindow.js',
	className	:	'MultipleEditMeasurementGridWindow',
	name		:	'draw ',
	parameters	:	[' measurements',' experients'],

},
{
	type		:	'method',
	line		:	'2',
	file		:	'./window/bufferwindow.js',
	className		:	'BufferWindow',
	name		:	'getButtons ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'4',
	file		:	'./window/bufferwindow.js',
	className		:	'BufferWindow',
	name		:	'_render ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'6',
	file		:	'./window/bufferwindow.js',
	className		:	'BufferWindow',
	name		:	'_postRender ',
	parameters		:	[],

},
{
	line		:	'7',
	file		:	'./window/bufferwindow.js',
	className	:	'BufferWindow',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'26',
	file		:	'./window/bufferwindow.js',
	className	:	'BufferWindow',
	name		:	'save ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'53',
	file		:	'./window/bufferwindow.js',
	className	:	'BufferWindow',
	name		:	'draw ',
	parameters	:	['  buffer'],

},
{
	type		:	'method',
	line		:	'3',
	file		:	'./window/macromoleculewindow.js',
	className		:	'MacromoleculeWindow',
	name		:	'getButtons ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./window/macromoleculewindow.js',
	className		:	'MacromoleculeWindow',
	name		:	'_render ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'7',
	file		:	'./window/macromoleculewindow.js',
	className		:	'MacromoleculeWindow',
	name		:	'_postRender ',
	parameters		:	[],

},
{
	line		:	'9',
	file		:	'./window/macromoleculewindow.js',
	className	:	'MacromoleculeWindow',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'22',
	file		:	'./window/macromoleculewindow.js',
	className	:	'MacromoleculeWindow',
	name		:	'save ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'46',
	file		:	'./window/macromoleculewindow.js',
	className	:	'MacromoleculeWindow',
	name		:	'draw ',
	parameters	:	['  macromolecule',' experiment'],

},
{
	type		:	'method',
	line		:	'2',
	file		:	'./window/stocksolutionwindow.js',
	className		:	'StockSolutionWindow',
	name		:	'getButtons ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'4',
	file		:	'./window/stocksolutionwindow.js',
	className		:	'StockSolutionWindow',
	name		:	'_render ',
	parameters		:	[],

},
{
	type		:	'method',
	line		:	'6',
	file		:	'./window/stocksolutionwindow.js',
	className		:	'StockSolutionWindow',
	name		:	'_postRender ',
	parameters		:	[],

},
{
	line		:	'7',
	file		:	'./window/stocksolutionwindow.js',
	className	:	'StockSolutionWindow',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'31',
	file		:	'./window/stocksolutionwindow.js',
	className	:	'StockSolutionWindow',
	name		:	'save ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'69',
	file		:	'./window/stocksolutionwindow.js',
	className	:	'StockSolutionWindow',
	name		:	'draw ',
	parameters	:	['  stockSolution',' experiment'],

},
{
	line		:	'1',
	file		:	'./window/abinitiowindow.js',
	className	:	'AbinitioWindow',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'5',
	file		:	'./window/abinitiowindow.js',
	className	:	'AbinitioWindow',
	name		:	'getGrid ',
	parameters	:	[' abinitios '],

},
{
	type		:	'method',
	line		:	'10',
	file		:	'./window/abinitiowindow.js',
	className	:	'AbinitioWindow',
	name		:	'show ',
	parameters	:	[' models '],

},
{
	line		:	'2',
	file		:	'./form/modelvisualizerform.js',
	className	:	'ModelVisualizerForm',
	parameters	:	['args'],

},
{
	type		:	'method',
	line		:	'16',
	file		:	'./form/modelvisualizerform.js',
	className	:	'ModelVisualizerForm',
	name		:	'_getFirHTML ',
	parameters	:	[' modelId',' width',' height',' type',' desc '],

},
{
	type		:	'method',
	line		:	'25',
	file		:	'./form/modelvisualizerform.js',
	className	:	'ModelVisualizerForm',
	name		:	'getItems ',
	parameters	:	[' modelPanel'],

},
{
	type		:	'method',
	line		:	'59',
	file		:	'./form/modelvisualizerform.js',
	className	:	'ModelVisualizerForm',
	name		:	'refresh ',
	parameters	:	[' models'],

},
{
	type		:	'method',
	line		:	'133',
	file		:	'./form/modelvisualizerform.js',
	className	:	'ModelVisualizerForm',
	name		:	'getPanel ',
	parameters	:	[' modelList'],

},
{
	comments	:	'*   * #onSaved   ',
	line		:	'1',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'13',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'getStockSolution ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'42',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'setStockSolution ',
	parameters	:	[' stockSolution '],

},
{
	type		:	'method',
	line		:	'56',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'getBufferCombo ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'66',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'getMacromoleculeCombo ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'76',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'refresh ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'79',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'_getTopPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'134',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'getPanel ',
	parameters	:	[' stockSolution '],

},
{
	type		:	'method',
	line		:	'161',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'183',
	file		:	'./form/stocksolutionform.js',
	className	:	'StockSolutionForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'  *   *    * @witdh   * @height   ',
	line		:	'1',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'16',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'getMacromolecule ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'28',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'setMacromolecule ',
	parameters	:	[' macromolecule '],

},
{
	type		:	'method',
	line		:	'33',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'getForm ',
	parameters	:	[' macromolecule '],

},
{
	type		:	'method',
	line		:	'92',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'getPanel ',
	parameters	:	[' macromolecule '],

},
{
	type		:	'method',
	line		:	'124',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'update ',
	parameters	:	['  '],

},
{
	comments	:	'    *********************************************   * MOLARITY GRID   *********************************************',
	type		:	'method',
	className	:	'MacromoleculeForm',
	name		:	'parseMolarityData ',
	parameters	:	[' macromolecule '],
	line		:	'144',
	file		:	'./form/macromoleculeform.js',

},
{
	type		:	'method',
	line		:	'160',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'getMolarityGrid ',
	parameters	:	[' macromolecule '],

},
{
	comments	:	'        *********************************************   * PDB GRID   *********************************************',
	type		:	'method',
	className	:	'MacromoleculeForm',
	name		:	'getPDBGrid ',
	parameters	:	[' macromolecule '],
	line		:	'279',
	file		:	'./form/macromoleculeform.js',

},
{
	type		:	'method',
	line		:	'450',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'getMolarityForm ',
	parameters	:	[' macromolecule '],

},
{
	comments	:	'    ********************   * JAVASCRIPT DOC   ********************',
	type		:	'method',
	className	:	'MacromoleculeForm',
	name		:	'input ',
	parameters	:	['  '],
	line		:	'501',
	file		:	'./form/macromoleculeform.js',

},
{
	type		:	'method',
	line		:	'507',
	file		:	'./form/macromoleculeform.js',
	className	:	'MacromoleculeForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * Same form as MX part   *    * @creationMode if true a create button appears instead of save   * @showTitle true or false   ',
	line		:	'1',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'18',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'fillStores ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'28',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'draw ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'32',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'setShipment ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'47',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'_saveShipment ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'97',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'getPanel ',
	parameters	:	[' shipment '],

},
{
	type		:	'method',
	line		:	'265',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'272',
	file		:	'./form/shipmentform.js',
	className	:	'ShipmentForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * Edit the information of a buffer   *    * #onSaved   * #onRemoveAdditive   ',
	line		:	'1',
	file		:	'./form/bufferform.js',
	className	:	'BufferForm',
	parameters	:	[' '],

},
{
	type		:	'method',
	line		:	'13',
	file		:	'./form/bufferform.js',
	className	:	'BufferForm',
	name		:	'getBuffer ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'23',
	file		:	'./form/bufferform.js',
	className	:	'BufferForm',
	name		:	'_getTopPanel ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'81',
	file		:	'./form/bufferform.js',
	className	:	'BufferForm',
	name		:	'getPanel ',
	parameters	:	[' buffer '],

},
{
	type		:	'method',
	line		:	'106',
	file		:	'./form/bufferform.js',
	className	:	'BufferForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'122',
	file		:	'./form/bufferform.js',
	className	:	'BufferForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   * Shows the header for the experiments changing the color and parameters depending on experiment type   *    ',
	line		:	'1',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	parameters	:	['args '],

},
{
	type		:	'method',
	line		:	'6',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getHTMLSource ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'21',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getHTMLDownload ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'50',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getTopPanel ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'68',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getButton ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'90',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getBottomPanel ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'99',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getComments ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'113',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'getPanel ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'146',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'152',
	file		:	'./form/experimentheaderform.js',
	className	:	'ExperimentHeaderForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	type		:	'method',
	line		:	'10',
	file		:	'./form/experimentform.js',
	className	:	'ExperimentForm',
	name		:	'_getItems ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'53',
	file		:	'./form/experimentform.js',
	className	:	'ExperimentForm',
	name		:	'getPanel ',
	parameters	:	[' experiment '],

},
{
	type		:	'method',
	line		:	'72',
	file		:	'./form/experimentform.js',
	className	:	'ExperimentForm',
	name		:	'input ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'76',
	file		:	'./form/experimentform.js',
	className	:	'ExperimentForm',
	name		:	'test ',
	parameters	:	[' targetId '],

},
{
	comments	:	'*   *    * This class represents an data Acquisition   *    * @json a json with the serialization of Experiment3VO   *    ',
	line		:	'1',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	parameters	:	['json '],

},
{
	type		:	'method',
	line		:	'23',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSpecimenColorByBufferId ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'27',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'setMacromoleculesColors ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'45',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getHPLCMacromolecule ',
	parameters	:	['  '],

},
{
	comments	:	'    *   * If ((specimen1.specimenId <> specimen2.specimenId)&&(specimen1.bufferId == specimen2.bufferId)) then specimen1.color < specimen2.color   ',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getSpecimenColors ',
	parameters	:	['  '],
	line		:	'59',
	file		:	'./data/experiment.js',

},
{
	type		:	'method',
	line		:	'77',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getBuffers ',
	parameters	:	['  '],

},
{
	comments	:	'    * BUFFER *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getBufferById ',
	parameters	:	[' bufferId '],
	line		:	'90',
	file		:	'./data/experiment.js',

},
{
	comments	:	'    * STOCK SOLUTION *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getStockSolutions ',
	parameters	:	['  '],
	line		:	'92',
	file		:	'./data/experiment.js',

},
{
	type		:	'method',
	line		:	'96',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getStockSolutionById ',
	parameters	:	[' stockSolutionId '],

},
{
	comments	:	'    * This method gets all the macromolecules of the Experiment *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getMacromolecules ',
	parameters	:	['  '],
	line		:	'103',
	file		:	'./data/experiment.js',

},
{
	comments	:	'    * Return an array with all the specimens collected, it means, where run3VO is not null *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getMeasurementsWithSubtractionAssociated ',
	parameters	:	['  '],
	line		:	'117',
	file		:	'./data/experiment.js',

},
{
	type		:	'method',
	line		:	'129',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSamples ',
	parameters	:	['  '],

},
{
	comments	:	'    * Deprecated changed to getSpecimenById *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getSampleById ',
	parameters	:	[' specimenId '],
	line		:	'131',
	file		:	'./data/experiment.js',

},
{
	type		:	'method',
	line		:	'135',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSpecimenById ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'145',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSpecimenByDataCollectionId ',
	parameters	:	[' dataCollectionId '],

},
{
	type		:	'method',
	line		:	'159',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'setSpecimenById ',
	parameters	:	[' specimen '],

},
{
	type		:	'method',
	line		:	'169',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'setMeasurement ',
	parameters	:	[' measurement '],

},
{
	type		:	'method',
	line		:	'179',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getConcentrations ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'197',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getConcentrationsBysample ',
	parameters	:	[' sample '],

},
{
	type		:	'method',
	line		:	'219',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'setSpecimen ',
	parameters	:	[' specimen '],

},
{
	comments	:	'    * SAMPLE PLATES *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getSamplePlates ',
	parameters	:	['  '],
	line		:	'231',
	file		:	'./data/experiment.js',

},
{
	type		:	'method',
	line		:	'235',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSamplePlateById ',
	parameters	:	[' samplePlateId '],

},
{
	type		:	'method',
	line		:	'244',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSamplePlateBySlotPositionColumn ',
	parameters	:	[' slotPositionColumn '],

},
{
	type		:	'method',
	line		:	'253',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSpecimenByPosition ',
	parameters	:	[' samplePlateId',' rowNumber',' columnNumber '],

},
{
	type		:	'method',
	line		:	'257',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSpecimensBySamplePlateId ',
	parameters	:	[' samplePlateId '],

},
{
	type		:	'method',
	line		:	'270',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSampleByPosition ',
	parameters	:	[' samplePlateId',' rowNumber',' columnNumber '],

},
{
	type		:	'method',
	line		:	'283',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getPlateGroups ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'299',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getPlatesByPlateGroupId ',
	parameters	:	[' plateGroupId '],

},
{
	type		:	'method',
	line		:	'312',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getMeasurements ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'327',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getMeasurementById ',
	parameters	:	[' measurementId '],

},
{
	type		:	'method',
	line		:	'337',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getMeasurementByDataCollectionId ',
	parameters	:	[' dataCollectionId '],

},
{
	comments	:	'    * Data Collection *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getDataCollections ',
	parameters	:	['  '],
	line		:	'344',
	file		:	'./data/experiment.js',

},
{
	type		:	'method',
	line		:	'355',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getDataCollectionsBySpecimenId ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'372',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getMeasurementsBySpecimenId ',
	parameters	:	[' specimenId '],

},
{
	type		:	'method',
	line		:	'383',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getDataCollectionByMeasurementId ',
	parameters	:	[' measurementId '],

},
{
	type		:	'method',
	line		:	'406',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getSubtractionById ',
	parameters	:	[' subtractionId '],

},
{
	type		:	'method',
	line		:	'422',
	file		:	'./data/experiment.js',
	className	:	'Experiment',
	name		:	'getDataCollectionById ',
	parameters	:	[' dataCollectionId '],

},
{
	comments	:	'    * For a specimen calculates the volume to load adding all the volume to load of all the measurements *',
	type		:	'method',
	className	:	'Experiment',
	name		:	'getVolumeToLoadBySampleId ',
	parameters	:	[' specimenId '],
	line		:	'429',
	file		:	'./data/experiment.js',

},
{
	line		:	'1',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	parameters	:	['experiments'],

},
{
	type		:	'method',
	line		:	'11',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getSpecimenColorByBufferId ',
	parameters	:	['  bufferId'],

},
{
	type		:	'method',
	line		:	'22',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getColorByMacromoleculeId ',
	parameters	:	['  bufferId'],

},
{
	type		:	'method',
	line		:	'34',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMeasurements ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'46',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMeasurementByDataCollectionId ',
	parameters	:	['  dataCollectionId'],

},
{
	type		:	'method',
	line		:	'56',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMergesByMeasurements ',
	parameters	:	['  measurements'],

},
{
	type		:	'method',
	line		:	'68',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getSamplePlateById ',
	parameters	:	['  samplePlateId'],

},
{
	type		:	'method',
	line		:	'78',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMergesByDataCollectionId ',
	parameters	:	['  dataCollectionId'],

},
{
	type		:	'method',
	line		:	'82',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMerges ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'86',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getDataCollectionById ',
	parameters	:	['  dataCollectionId'],

},
{
	type		:	'method',
	line		:	'98',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getDataCollectionByMeasurementId ',
	parameters	:	['  measurementId'],

},
{
	type		:	'method',
	line		:	'110',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMeasurementsNotCollected ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'124',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMeasurementsCollected ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'138',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getMeasurementById ',
	parameters	:	['  specimenId'],

},
{
	type		:	'method',
	line		:	'148',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getBufferById ',
	parameters	:	['  bufferId'],

},
{
	type		:	'method',
	line		:	'158',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getSampleById ',
	parameters	:	['  sampleId'],

},
{
	type		:	'method',
	line		:	'168',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getSamplesByCondition ',
	parameters	:	['  macromoleculeId',' bufferId'],

},
{
	type		:	'method',
	line		:	'185',
	file		:	'./data/experiments.js',
	className	:	'ExperimentList',
	name		:	'getFrames ',
	parameters	:	['  mergesList'],

},
{
	comments	:	'*   * Static class loaded almost always on entrypoint. It represent all the   * information about the proposal   *    * @json Serialization of a hashmap containing: macromolecules, buffers,   *       assemblies, stockSolutions, labcontacts, shippings   ',
	line		:	'1',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	parameters	:	['json '],

},
{
	type		:	'method',
	line		:	'25',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getAdditiveTypes ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'31',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getBufferById ',
	parameters	:	[' bufferId '],

},
{
	type		:	'method',
	line		:	'40',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getShipmentByDewarId ',
	parameters	:	[' dewarId '],

},
{
	type		:	'method',
	line		:	'52',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getAssemblies ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'56',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getStockSolutions ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'60',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getSessions ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'64',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getUnpackedStockSolutions ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'75',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getStockSolutionsByDewarId ',
	parameters	:	[' dewarId '],

},
{
	type		:	'method',
	line		:	'86',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'sortByName ',
	parameters	:	[' a',' b '],

},
{
	type		:	'method',
	line		:	'94',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'setMacromolecules ',
	parameters	:	[' macromolecules '],

},
{
	type		:	'method',
	line		:	'99',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'_getColors ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'111',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getMacromoleculeColors ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'116',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getBufferColors ',
	parameters	:	['  '],

},
{
	comments	:	'    * Set colors using the funcion rainbow on BUI  ',
	type		:	'method',
	className	:	'Proposal',
	name		:	'setColors ',
	parameters	:	['  '],
	line		:	'131',
	file		:	'./data/proposal.js',

},
{
	type		:	'method',
	line		:	'159',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getBuffers ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'163',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getLabcontacts ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'167',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getShipments ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'171',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getShipmentById ',
	parameters	:	[' shipmentId '],

},
{
	type		:	'method',
	line		:	'180',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getPlateTypes ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'184',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getPlateByFlavour',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'190',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getPlateTypeById ',
	parameters	:	[' plateTypeId '],

},
{
	type		:	'method',
	line		:	'200',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getSafetyLevels ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'221',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'setItems ',
	parameters	:	[' data '],

},
{
	type		:	'method',
	line		:	'233',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'init ',
	parameters	:	[' sessionId '],

},
{
	type		:	'method',
	line		:	'243',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getMacromoleculeById ',
	parameters	:	[' macromoleculeId '],

},
{
	type		:	'method',
	line		:	'252',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getStockSolutionById ',
	parameters	:	[' stockSolutionId '],

},
{
	type		:	'method',
	line		:	'261',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getStockSolutionsBySpecimen ',
	parameters	:	[' macromoleculeId',' bufferId '],

},
{
	type		:	'method',
	line		:	'273',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getMacromolecules ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'277',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getSafetyLabelName ',
	parameters	:	[' safetyLevelId '],

},
{
	type		:	'method',
	line		:	'287',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getPlatesByProposal ',
	parameters	:	['  '],

},
{
	type		:	'method',
	line		:	'310',
	file		:	'./data/proposal.js',
	className	:	'Proposal',
	name		:	'getLabContactsByProposalId ',
	parameters	:	['  '],

},
]
