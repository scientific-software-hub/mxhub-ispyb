/*******************************************************************************
 * This file is part of ISPyB.
 * 
 * ISPyB is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * ISPyB is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with ISPyB.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contributors : S. Delageniere, R. Leal, L. Launer, K. Levik, S. Veyrier, P. Brenchereau, M. Bodin, A. De Maria Antolinos
 ******************************************************************************************************************************/

package ispyb.server.biosaxs.vos.assembly;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


/**
 * Assembly3VO generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "Assembly")
public class Assembly3VO implements java.io.Serializable {
	protected Integer assemblyId;
//	protected Macromolecule3VO macromolecule3VO;
	protected Integer macromoleculeId;
//	protected int experimentId;
	protected Date creationDate;
	protected String comments;
	protected Set<AssemblyHasMacromolecule3VO> assemblyHasMacromolecules3VOs = new HashSet<AssemblyHasMacromolecule3VO>(0);

	public Assembly3VO() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "assemblyId", unique = true, nullable = false)
	public Integer getAssemblyId() {
		return this.assemblyId;
	}

	public void setAssemblyId(Integer assemblyId) {
		this.assemblyId = assemblyId;
	}
	
	@Column(name = "macromoleculeId")
	public Integer getMacromoleculeId() {
		return this.macromoleculeId;
	}

	public void setMacromoleculeId(Integer macromoleculeId) {
		this.macromoleculeId = macromoleculeId;
	}
	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationDate", length = 0)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "comments")
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}


	
//	/** TRANSIENT METHODS **/
//	@Transient
//	public List<Macromolecule3VO> getMacromolecules() {
//		List<Macromolecule3VO> macromolecules = new ArrayList<Macromolecule3VO>();
//		for (AssemblyHasMacromolecule3VO assemblyRegion : this.getAssemblyregion3VOs()) {
//			macromolecules.add(assemblyRegion.getMacromolecule3VO());
//		}
//		return macromolecules;
//	}
	
//	@Transient
//	public Macromolecule3VO getMacromoleculesByAcronym(String acronym) {
//		List<Macromolecule3VO> macromolecules = this.getMacromolecules();
//		for (Macromolecule3VO macromolecule3vo : macromolecules) {
//			if (macromolecule3vo.getAcronym().equals(acronym)){
//				return macromolecule3vo;
//			}
//		}
//		return null;
//	}
	
	
//	@Transient
//	public List<Specimen3VO> getSpecimens() {
//		List<Specimen3VO> samples = new ArrayList<Specimen3VO>();
//		for (Assemblyregion3VO assemblyRegion : this.getAssemblyregion3VOs()) {
//			samples.addAll(assemblyRegion.getMacromolecule3VO().getSpecimen3VOs());
//		}
//		return samples;
//	}
	

//	@Override
//	public Object onCycleDetected(Context arg0) {
//		return null;
//	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "assemblyId")
	public Set<AssemblyHasMacromolecule3VO> getAssemblyHasMacromolecules3VOs() {
		return assemblyHasMacromolecules3VOs;
	}

	public void setAssemblyHasMacromolecules3VOs(
			Set<AssemblyHasMacromolecule3VO> assemblyHasMacromolecules3VOs) {
		this.assemblyHasMacromolecules3VOs = assemblyHasMacromolecules3VOs;
	}

}
